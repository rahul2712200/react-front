{"ast":null,"code":"import _defineProperty from \"C:\\\\summer project\\\\react-front\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"C:\\\\summer project\\\\react-front\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\summer project\\\\react-front\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\summer project\\\\react-front\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\summer project\\\\react-front\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\summer project\\\\react-front\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\summer project\\\\react-front\\\\src\\\\post\\\\EditPost.js\";\nimport React, { Component } from \"react\";\nimport { singlePost, update } from \"./apiPost\";\nimport { isAuthenticated } from \"../auth\";\nimport { Redirect } from \"react-router-dom\";\nimport DefaultPost from \"../images/mountains.jpg\";\n\nvar EditPost =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(EditPost, _Component);\n\n  function EditPost() {\n    var _this;\n\n    _classCallCheck(this, EditPost);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(EditPost).call(this));\n\n    _this.init = function (postId) {\n      singlePost(postId).then(function (data) {\n        if (data.error) {\n          _this.setState({\n            redirectToProfile: true\n          });\n        } else {\n          _this.setState({\n            id: data.postedBy._id,\n            title: data.title,\n            body: data.body,\n            error: \"\"\n          });\n        }\n      });\n    };\n\n    _this.isValid = function () {\n      var _this$state = _this.state,\n          title = _this$state.title,\n          body = _this$state.body,\n          fileSize = _this$state.fileSize;\n\n      if (fileSize > 1000000) {\n        _this.setState({\n          error: \"File size should be less than 100kb\",\n          loading: false\n        });\n\n        return false;\n      }\n\n      if (title.length === 0 || body.length === 0) {\n        _this.setState({\n          error: \"All fields are required\",\n          loading: false\n        });\n\n        return false;\n      }\n\n      return true;\n    };\n\n    _this.handleChange = function (name) {\n      return function (event) {\n        var _this$setState;\n\n        _this.setState({\n          error: \"\"\n        });\n\n        var value = name === \"photo\" ? event.target.files[0] : event.target.value;\n        var fileSize = name === \"photo\" ? event.target.files[0].size : 0;\n\n        _this.postData.set(name, value);\n\n        _this.setState((_this$setState = {}, _defineProperty(_this$setState, name, value), _defineProperty(_this$setState, \"fileSize\", fileSize), _this$setState));\n      };\n    };\n\n    _this.clickSubmit = function (event) {\n      event.preventDefault();\n\n      _this.setState({\n        loading: true\n      });\n\n      if (_this.isValid()) {\n        var postId = _this.props.match.params.postId;\n        var token = isAuthenticated().token;\n        update(postId, token, _this.postData).then(function (data) {\n          if (data.error) _this.setState({\n            error: data.error\n          });else {\n            _this.setState({\n              loading: false,\n              title: \"\",\n              body: \"\",\n              redirectToProfile: true\n            });\n          }\n        });\n      }\n    };\n\n    _this.editPostForm = function (title, body) {\n      return React.createElement(\"form\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        className: \"text-muted\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, \"Post Photo\"), React.createElement(\"input\", {\n        onChange: _this.handleChange(\"photo\"),\n        type: \"file\",\n        accept: \"image/*\",\n        className: \"form-control\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        className: \"text-muted\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, \"Title\"), React.createElement(\"input\", {\n        onChange: _this.handleChange(\"title\"),\n        type: \"text\",\n        className: \"form-control\",\n        value: title,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        className: \"text-muted\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, \"Body\"), React.createElement(\"textarea\", {\n        onChange: _this.handleChange(\"body\"),\n        type: \"text\",\n        className: \"form-control\",\n        value: body,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      })), React.createElement(\"button\", {\n        onClick: _this.clickSubmit,\n        className: \"btn btn-raised btn-primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, \"Update Post\"));\n    };\n\n    _this.state = {\n      id: \"\",\n      title: \"\",\n      body: \"\",\n      redirectToProfile: false,\n      error: \"\",\n      fileSize: 0,\n      loading: false\n    };\n    return _this;\n  }\n\n  _createClass(EditPost, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.postData = new FormData();\n      var postId = this.props.match.params.postId;\n      this.init(postId);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state2 = this.state,\n          id = _this$state2.id,\n          title = _this$state2.title,\n          body = _this$state2.body,\n          redirectToProfile = _this$state2.redirectToProfile,\n          error = _this$state2.error,\n          loading = _this$state2.loading;\n\n      if (redirectToProfile) {\n        return React.createElement(Redirect, {\n          to: \"/user/\".concat(isAuthenticated().user._id),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 141\n          },\n          __self: this\n        });\n      }\n\n      return React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        className: \"mt-5 mb-5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }, title), React.createElement(\"div\", {\n        className: \"alert alert-danger\",\n        style: {\n          display: error ? \"\" : \"none\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }, error), loading ? React.createElement(\"div\", {\n        className: \"jumbotron text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }, \"Loading...\")) : \"\", React.createElement(\"img\", {\n        style: {\n          height: \"200px\",\n          width: \"auto\"\n        },\n        className: \"img-thumbnail\",\n        src: \"\".concat(process.env.REACT_APP_API_URL, \"/post/photo/\").concat(id, \"?\").concat(new Date().getTime()),\n        onError: function onError(i) {\n          return i.target.src = \"\".concat(DefaultPost);\n        },\n        alt: title,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      }), isAuthenticated().user.role === \"admin\" && this.editPostForm(title, body), isAuthenticated().user._id === id && this.editPostForm(title, body));\n    }\n  }]);\n\n  return EditPost;\n}(Component);\n\nexport default EditPost;","map":{"version":3,"sources":["C:\\summer project\\react-front\\src\\post\\EditPost.js"],"names":["React","Component","singlePost","update","isAuthenticated","Redirect","DefaultPost","EditPost","init","postId","then","data","error","setState","redirectToProfile","id","postedBy","_id","title","body","isValid","state","fileSize","loading","length","handleChange","name","event","value","target","files","size","postData","set","clickSubmit","preventDefault","props","match","params","token","editPostForm","FormData","user","display","height","width","process","env","REACT_APP_API_URL","Date","getTime","i","src","role"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { singlePost, update } from \"./apiPost\";\r\nimport { isAuthenticated } from \"../auth\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport DefaultPost from \"../images/mountains.jpg\";\r\n\r\nclass EditPost extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            id: \"\",\r\n            title: \"\",\r\n            body: \"\",\r\n            redirectToProfile: false,\r\n            error: \"\",\r\n            fileSize: 0,\r\n            loading: false\r\n        };\r\n    }\r\n\r\n    init = postId => {\r\n        singlePost(postId).then(data => {\r\n            if (data.error) {\r\n                this.setState({ redirectToProfile: true });\r\n            } else {\r\n                this.setState({\r\n                    id: data.postedBy._id,\r\n                    title: data.title,\r\n                    body: data.body,\r\n                    error: \"\"\r\n                });\r\n            }\r\n        });\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.postData = new FormData();\r\n        const postId = this.props.match.params.postId;\r\n        this.init(postId);\r\n    }\r\n\r\n    isValid = () => {\r\n        const { title, body, fileSize } = this.state;\r\n        if (fileSize > 1000000) {\r\n            this.setState({\r\n                error: \"File size should be less than 100kb\",\r\n                loading: false\r\n            });\r\n            return false;\r\n        }\r\n        if (title.length === 0 || body.length === 0) {\r\n            this.setState({ error: \"All fields are required\", loading: false });\r\n            return false;\r\n        }\r\n        return true;\r\n    };\r\n\r\n    handleChange = name => event => {\r\n        this.setState({ error: \"\" });\r\n        const value =\r\n            name === \"photo\" ? event.target.files[0] : event.target.value;\r\n\r\n        const fileSize = name === \"photo\" ? event.target.files[0].size : 0;\r\n        this.postData.set(name, value);\r\n        this.setState({ [name]: value, fileSize });\r\n    };\r\n\r\n    clickSubmit = event => {\r\n        event.preventDefault();\r\n        this.setState({ loading: true });\r\n\r\n        if (this.isValid()) {\r\n            const postId = this.props.match.params.postId;\r\n            const token = isAuthenticated().token;\r\n\r\n            update(postId, token, this.postData).then(data => {\r\n                if (data.error) this.setState({ error: data.error });\r\n                else {\r\n                    this.setState({\r\n                        loading: false,\r\n                        title: \"\",\r\n                        body: \"\",\r\n                        redirectToProfile: true\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    editPostForm = (title, body) => (\r\n        <form>\r\n            <div className=\"form-group\">\r\n                <label className=\"text-muted\">Post Photo</label>\r\n                <input\r\n                    onChange={this.handleChange(\"photo\")}\r\n                    type=\"file\"\r\n                    accept=\"image/*\"\r\n                    className=\"form-control\"\r\n                />\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <label className=\"text-muted\">Title</label>\r\n                <input\r\n                    onChange={this.handleChange(\"title\")}\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    value={title}\r\n                />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n                <label className=\"text-muted\">Body</label>\r\n                <textarea\r\n                    onChange={this.handleChange(\"body\")}\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    value={body}\r\n                />\r\n            </div>\r\n\r\n            <button\r\n                onClick={this.clickSubmit}\r\n                className=\"btn btn-raised btn-primary\"\r\n            >\r\n                Update Post\r\n            </button>\r\n        </form>\r\n    );\r\n\r\n    render() {\r\n        const {\r\n            id,\r\n            title,\r\n            body,\r\n            redirectToProfile,\r\n            error,\r\n            loading\r\n        } = this.state;\r\n\r\n        if (redirectToProfile) {\r\n            return <Redirect to={`/user/${isAuthenticated().user._id}`} />;\r\n        }\r\n\r\n        return (\r\n            <div className=\"container\">\r\n                <h2 className=\"mt-5 mb-5\">{title}</h2>\r\n\r\n                <div\r\n                    className=\"alert alert-danger\"\r\n                    style={{ display: error ? \"\" : \"none\" }}\r\n                >\r\n                    {error}\r\n                </div>\r\n\r\n                {loading ? (\r\n                    <div className=\"jumbotron text-center\">\r\n                        <h2>Loading...</h2>\r\n                    </div>\r\n                ) : (\r\n                    \"\"\r\n                )}\r\n\r\n                <img\r\n                    style={{ height: \"200px\", width: \"auto\" }}\r\n                    className=\"img-thumbnail\"\r\n                    src={`${\r\n                        process.env.REACT_APP_API_URL\r\n                    }/post/photo/${id}?${new Date().getTime()}`}\r\n                    onError={i => (i.target.src = `${DefaultPost}`)}\r\n                    alt={title}\r\n                />\r\n\r\n                {isAuthenticated().user.role === \"admin\" &&\r\n                    this.editPostForm(title, body)}\r\n\r\n                {isAuthenticated().user._id === id &&\r\n                    this.editPostForm(title, body)}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default EditPost;\r\n"]},"metadata":{},"sourceType":"module"}